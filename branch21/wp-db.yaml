apiVersion: v1
kind: Service
metadata:
  name: wordpress-mysql
  namespace: dev
  labels:
    app: wordpress
spec:
  type: ClusterIP
  ports:
    - name: wordpress-mysql
      port: 3306
      protocol: TCP
      targetPort: 3306
  selector:
    app: wordpress
    tier: mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: dev
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wordpress-mysql
  labels:
    app: wordpress
  namespace: dev
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
  serviceName: "mysql"
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - image: mysql:8.0
        name: mysql
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: '1'
          - name: MYSQL_DATABASE
            value: wordpress
          - name: MYSQL_USER
            value: wordpress
          - name: MYSQL_PASSWORD
            value: examplepass
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: pv-db-local
          mountPath: /var/lib/mysql
      restartPolicy: Always
      volumes:
      - name: pv-db-local
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      affinity:
        podAntiAffinity:
           requiredDuringSchedulingIgnoredDuringExecution:
             - labelSelector:
                 matchExpressions:
                   - key: "app"
                     operator: In
                     values:
                     - minikube-m02
               topologyKey: "kubernetes.io/hostname"